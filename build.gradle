plugins {
    id 'java'
    id "application"
    id 'io.quarkus'
}

group = 'mcorp'
version = '0.1.0'

ext {
    javaMainClass = "mcorp.Main"
}

application {
    mainClassName = javaMainClass
}

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    implementation 'io.quarkus:quarkus-smallrye-reactive-messaging-mqtt'
    implementation enforcedPlatform("${quarkusPlatformGroupId}:${quarkusPlatformArtifactId}:${quarkusPlatformVersion}")
    implementation 'io.quarkus:quarkus-arc'
    testImplementation 'io.quarkus:quarkus-junit5'

    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation 'org.mockito:mockito-core:5.6.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:5.6.0'

    annotationProcessor('org.projectlombok:lombok:1.18.30')
    testAnnotationProcessor('org.projectlombok:lombok:1.18.30')
    compileOnly 'org.projectlombok:lombok:1.18.30'
    testCompileOnly('org.projectlombok:lombok:1.18.30')

    implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.2'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.15.2'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.15.2'
}

test {
    useJUnitPlatform()
}

jar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    manifest {
        attributes "Main-Class": javaMainClass
    }

    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}